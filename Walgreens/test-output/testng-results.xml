<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="2" passed="1">
  <reporter-output>
    <line>
      <![CDATA[Extent Report DirectoryC:\Users\Julian\IdeaProjects\MyProjectDjamel\Walgreens\test-output\html]]>
    </line>
  </reporter-output>
  <suite name="Walgreens" duration-ms="60662" started-at="2023-05-27T20:28:03Z" finished-at="2023-05-27T20:29:04Z">
    <groups>
    </groups>
    <test name="test" duration-ms="60662" started-at="2023-05-27T20:28:03Z" finished-at="2023-05-27T20:29:04Z">
      <class name="test.TestLogin">
        <test-method status="PASS" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:test.TestLogin@2cb4c3ab]" name="extentSetup" is-config="true" duration-ms="264" started-at="2023-05-27T16:28:03Z" finished-at="2023-05-27T16:28:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6e57b5e9]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report DirectoryC:\Users\Julian\IdeaProjects\MyProjectDjamel\Walgreens\test-output\html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method status="PASS" signature="init()[pri:0, instance:test.TestLogin@2cb4c3ab]" name="init" is-config="true" duration-ms="20147" started-at="2023-05-27T16:28:03Z" finished-at="2023-05-27T16:28:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:test.TestLogin@2cb4c3ab]" name="startExtent" is-config="true" duration-ms="8" started-at="2023-05-27T16:28:23Z" finished-at="2023-05-27T16:28:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.TestLogin.loginWithInvalidCridentiels()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="FAIL" signature="loginWithInvalidCridentiels()[pri:0, instance:test.TestLogin@2cb4c3ab]" name="loginWithInvalidCridentiels" duration-ms="8675" started-at="2023-05-27T16:28:23Z" finished-at="2023-05-27T16:28:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at org.testng.Assert.assertFalse(Assert.java:73)
	at test.TestLogin.loginWithInvalidCridentiels(TestLogin.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)
	at org.testng.TestNG.run(TestNG.java:1024)
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidCridentiels -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:test.TestLogin@2cb4c3ab]" name="afterEachTestMethod" is-config="true" duration-ms="1467" started-at="2023-05-27T16:28:32Z" finished-at="2023-05-27T16:28:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithInvalidCridentiels status=FAILURE method=TestLogin.loginWithInvalidCridentiels()[pri:0, instance:test.TestLogin@2cb4c3ab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:test.TestLogin@2cb4c3ab]" name="teardown" is-config="true" duration-ms="1" started-at="2023-05-27T16:28:33Z" finished-at="2023-05-27T16:28:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="init()[pri:0, instance:test.TestLogin@2cb4c3ab]" name="init" is-config="true" duration-ms="15377" started-at="2023-05-27T16:28:33Z" finished-at="2023-05-27T16:28:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="loginWithValidCridentiels()[pri:0, instance:test.TestLogin@2cb4c3ab]" name="loginWithValidCridentiels" duration-ms="12696" started-at="2023-05-27T16:28:49Z" finished-at="2023-05-27T16:29:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCridentiels -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:test.TestLogin@2cb4c3ab]" name="startExtent" is-config="true" duration-ms="0" started-at="2023-05-27T16:28:49Z" finished-at="2023-05-27T16:28:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.TestLogin.loginWithValidCridentiels()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:test.TestLogin@2cb4c3ab]" name="afterEachTestMethod" is-config="true" duration-ms="2267" started-at="2023-05-27T16:29:01Z" finished-at="2023-05-27T16:29:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithValidCridentiels status=SUCCESS method=TestLogin.loginWithValidCridentiels()[pri:0, instance:test.TestLogin@2cb4c3ab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:test.TestLogin@2cb4c3ab]" name="teardown" is-config="true" duration-ms="0" started-at="2023-05-27T16:29:04Z" finished-at="2023-05-27T16:29:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="generateReport()[pri:0, instance:test.TestLogin@2cb4c3ab]" name="generateReport" is-config="true" duration-ms="30" started-at="2023-05-27T16:29:04Z" finished-at="2023-05-27T16:29:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- test.TestLogin -->
    </test> <!-- test -->
  </suite> <!-- Walgreens -->
</testng-results>
